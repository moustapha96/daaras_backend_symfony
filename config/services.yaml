# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    # Define the sms gateway parameters
    sms_gateway.baseurl: "%env(resolve:SMSGATEWAY_BASEURL)%"
    sms_gateway.apikey: "%env(resolve:SMSGATEWAY_APIKEY)%"
    sms_gateway.apikeyprefix: "%env(resolve:SMSGATEWAY_APIKEYPREFIX)%"
    app.MYAGROPULSE_FORM_BASEURI: '%env(resolve:MYAGROPULSE_FORM_BASEURI)%'
    TWILIO_WHATSAPP_NUMBER: '%env(resolve:TWILIO_WHATSAPP_NUMBER)%'
    TWILIO_ACCOUNT_SID: '%env(resolve:TWILIO_ACCOUNT_SID)%'
    TWILIO_AUTH_TOKEN: '%env(resolve:TWILIO_AUTH_TOKEN)%'


services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: "../src/"
        exclude:
            - "../src/DependencyInjection/"
            - "../src/Entity/"
            - "../src/Kernel.php"
            - "../src/Tests/"
   
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    # swagger docs
    App\OpenApi\JwtDecorator:
        decorates: "api_platform.openapi.factory"
        arguments: ["@.inner"]

    App\DataPersister\UserDataPersister:
        bind:
            $decorated: "@api_platform.doctrine.orm.data_persister"
        # Uncomment only if autoconfiguration is disabled
        #arguments: ['@App\DataPersister\UserDataPersister.inner']
        #tags: [ 'api_platform.data_persister' ]
    